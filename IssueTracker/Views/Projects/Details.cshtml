@model IssueTracker.Models.Project

@{
    ViewData["Title"] = "Details";
}

@inject IssueTracker.Services.Profile.ProfileManager ProfileManager

<section class="content-header">
    <h1>
        Project Details
    </h1>
    <ol class="breadcrumb">
        <li><a href="/"><i class="fa fa-dashboard"></i> Home</a></li>
        <li><a href="/Projects">Projects</a></li>
        <li class="active">Details</li>
    </ol>
</section>

<hr />


<section class="content">
    <div class="box box-default">
        <div class="box-primary">
            <h4>Project</h4>
            <hr />
            <div class="row">
                <div class="col-lg-6">
                    <dl class="dl-horizontal">
                        <dt>
                            @Html.DisplayNameFor(model => model.Title)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Title)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.Description)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Description)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.Created)
                        </dt>
                        <dd>
                            @Html.DisplayFor(model => model.Created)
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.Tickets)
                        </dt>
                        <dd>
                            <br />
                            <table class="table table-sm table-bordered">
                                <tr>
                                    <th>Ticket</th>
                                    <th>Description</th>
                                    <th>Created On</th>
                                    <th>Priority</th>
                                    <th></th>
                                </tr>
                                @foreach (var item in Model.Tickets)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Title)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Description)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Created)
                                        </td>
                                        <td>
                                            @if (item.TicketPriority != null)
                                            {
                                                @switch (item.TicketPriority.Name)
                                                {
                                                    case "Critical":
                                                        <span class="label label-danger">Critical</span>
                                                        break;
                                                    case "HIgh":
                                                        <span class="label label-warning">High</span>
                                                        break;
                                                    case "Medium":
                                                        <span class="label label-primary">Medium</span>
                                                        break;
                                                    default:
                                                        <span class="label label-default">Low</span>
                                                        break;
                                                }
                                            }
                                        </td>
                                        <td>
                                            <a asp-controller="Tickets" asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary">Details</a>
                                        </td>
                                    </tr>
                                }
                            </table>
                        </dd>
                    </dl>
                </div>
            </div>
        </div>
        <hr />
        <h3>Users Assigned To Project</h3>
        <ul>
            @foreach (var item in Model.ProjectUsers)
            {
                <li>
                    @if (!string.IsNullOrEmpty(item.UserId))
                    {
                        var userName = await ProfileManager.UserName(item.UserId);
                        <b>
                            @userName
                        </b>
                        <br />
                    }
                </li>
            }
        </ul>
        <br />
        @if (ProfileManager.IsInRole("Admin"))
        {
            <a asp-action="UserManagement" asp-route-id="@Model.Id" class="btn btn-default">Manage Users On Project</a>
        }
    </div>

    <hr />
    <div>
        <a asp-action="Edit" asp-route-id="@Model.Id" >Edit</a> |
        <a asp-action="Index">Back to List</a>
    </div>
</section>
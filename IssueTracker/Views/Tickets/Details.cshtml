@model IssueTracker.Models.TicketDetailsViewModel

@inject IssueTracker.Services.Profile.ProfileManager ProfileManager

@{
    ViewData["Title"] = "Details";
}

<section class="content-header">
    <h1>
        Ticket Details
    </h1>
    <ol class="breadcrumb">
        <li><a href="/"><i class="fa fa-dashboard"></i> Home</a></li>
        <li><a href="/Tickets">Tickets</a></li>
        <li class="active">Details</li>
    </ol>
</section>

<hr />

<section class="content">
    <div class="box-primary">
        <hr />
        <div class="row">
            <div class="col-lg-6">
                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.Title)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Title)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.Description)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.Description)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.ProjectTitle)
                    </dt>
                    <dd>
                        <a asp-controller="Projects" asp-action="Details" asp-route-id="@Model.ProjectId">@Html.DisplayFor(model => model.ProjectTitle)</a>
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.OwnerName)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.OwnerName)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.PercentComplete)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.PercentComplete)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.TicketStatus)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.TicketStatus)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.TicketPriority)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.TicketPriority)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(model => model.TicketType)
                    </dt>
                    <dd>
                        @Html.DisplayFor(model => model.TicketType)
                    </dd>
                    @*<dt>
                            @Html.DisplayNameFor(model => model.Created)
                        </dt>
                        <dd>
                            @TimeZoneInfo.ConvertTime(Model.Created, TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time")).ToString("M/d/yy h:mm tt")
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.Updated)
                        </dt>
                        <dd>
                            @if (Model.Updated != null)
                            {
                                @TimeZoneInfo.ConvertTime((DateTimeOffset)Model.Updated, TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time")).ToString("M/d/yy h:mm tt")
                            }
                        </dd>*@
                    <dd>
                        <br />
                        @Html.ActionLink("Edit Ticket", "Edit", new { id = Model.Id }, new { @class = "btn btn-default" })
                    </dd>
                </dl>
            </div>

        </div>
    </div>

    <div class="box-comments">
        <h4>Comments</h4>
        <br />
        @if (Model.TicketComments != null)
        {
            @foreach (TicketComment ticketComment in Model.TicketComments)
            {
                <p>
                    @ticketComment.Comment
                </p>
                @if (!string.IsNullOrEmpty(ticketComment.UserId))
                {
                    var userName = await ProfileManager.UserName(ticketComment.UserId);
                    <b>
                        @userName
                    </b>
                }
                <br />
                <b>
                    @TimeZoneInfo.ConvertTime(ticketComment.Created, TimeZoneInfo.FindSystemTimeZoneById("Central Standard Time")).ToString("M/d/yy h:mm tt")
                </b>
                <br />
            }
        }
        else
        {
            <b>
                No Comments
            </b>
            <br />
        }
        <hr />
        @Html.ActionLink("Add Comment", "CreateComment", "Tickets", new { id = Model.Id }, new { @class = "btn btn-default" })
    </div>
</section>


